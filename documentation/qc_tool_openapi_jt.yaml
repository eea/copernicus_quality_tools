openapi: "3.0.0"
info:
  version: 1.0.0
  title: CLMS QC Tool API documentation
  license:
    name: EUPL
servers:
  - url: http://localhost:8000/api
paths:
  /register-delivery:
    post:
      summary: Register a new delivery from already uploaded file
      operationId: registerDelivery
      tags:
        - registering a new delivery
      requestBody:
        description: Specify full path of the uploaded file.
        required: true
        content:
          application/json:
            schema:
              properties:
                uploaded_file:
                  type: string
                  example: /mnt/qc_tool_incoming/incoming/guest/example_delivery.zip
      responses:
        200:
          description: Id of the registered delivery
          content:
            application/json:    
              schema:
                properties:
                  status: 
                    type: string
                    example: ok
                  message: 
                    type: string
                    example: Deliery successfully registered
                  delivery_id:
                    type: integer
                    format: int64
                    example: 123
  
  /delivery-list:
    get:
      summary: List all deliveries
      operationId: listDeliveries
      tags:
        - deliveries
      responses:
        200:
          description: An array of deliveries
          content:
            application/json:    
              schema:
                properties:
                  status:
                    type: string
                  message: 
                    type: string
                  deliveries:
                    type: array
                    items:
                      $ref: "#/components/schemas/Delivery"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /job-info/{job_uuid}:
    get:
      summary: Info for a specific job
      operationId: jobInfo
      tags:
        - Job Info
      parameters:
        - name: job_uuid
          in: path
          required: true
          description: The uuid to show information about
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: string
                    example: showing job info
                  data:
                    $ref: "#/components/schemas/JobTemplate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /job-result/{job_uuid}:
    get:
      summary: Specific job results in json format
      operationId: jobResult
      tags:
        - Job Result
      parameters:
        - name: job_uuid
          in: path
          required: true
          description: The uuid to get results of
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: string
                    example: showing job result in json format
                  data:
                    $ref: "#/components/schemas/JobTemplate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"            
                
  /job-result-pdf/{job_uuid}:
    get:
      summary: Specific job results in pdf format
      operationId: jobResultPdf
      tags:
        - Job Result PDF
      parameters:
        - name: job_uuid
          in: path
          required: true
          description: The uuid to get results of
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: string
                    example: showing job result in pdf format
                  data:
                    $ref: "#/components/schemas/JobTemplate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"     
                
  /job-history/{delivery_id}:
    get:
      summary: Specific delivery job history
      operationId: jobHistory
      tags:
        - Job History
      parameters:
        - name: delivery_id
          in: path
          required: true
          description: The delivery_id to get history of
          schema:
            type: string
      responses:
        200:
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                    example: ok
                  message:
                    type: string
                    example: showing job history of specific delivery
                  data:
                    $ref: "#/components/schemas/JobTemplate"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"     
                
  /create-job: #upravit vstupni parametry!!!
    post:
      summary: Run a new checking job
      operationId: createJob
      tags:
        - running a new checking job
      requestBody:
        description: Specify full path of the uploaded file.
        required: true
        content:
          application/json:
            schema:
              properties:
                uploaded_file:
                  type: string
                  example: /mnt/qc_tool_incoming/incoming/guest/example_delivery.zip
      responses:
        200:
          description: Id of the registered delivery
          content:
            application/json:    
              schema:
                properties:
                  status: 
                    type: string
                    example: ok
                  message: 
                    type: string
                    example: Deliery successfully registered
                  delivery_id:
                    type: integer
                    format: int64
                    example: 123
components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: query
      name: apikey
  schemas:
    Delivery:
      required:
        - id
        - name
        - filename
        - user
        - date_uploaded
        - size_bytes
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        filename:
          type: string
        user:
          type: string
        date_uploaded:
          type: string
          
    JobTemplate:
      properties:
        job_uuid:
          type: string
          example:
        status:
          type: string
          example: cz_2018
        description:
          type: string
          example: Coastal Zones 2018 status
        user_name:
          type: string
        job_start_date:
          type: string
          example:
        job_finish_date:
          type: string
          example:
        filename:
          type: string
        hash:
          type: string
        reference_year:
          type: integer
          example: 2018
        error_message:
          type: string
        qc_tool_version:
          type: string
        steps:
          type: array
          items:
            $ref: "#/components/schemas/JobStep"
        
          
    Job:
      required:
        - job_uuid
      properties:
        job_uuid:
          type: string
          example: b8128c0d-28c1-4ccf-ba6d-398266224bfe
        status:
          type: string
          
          example: cz_2018
        description:
          type: string
          example: Coastal Zones 2018 status
        user_name:
          type: string
        job_start_date:
          type: string
        job_finish_date:
          type: string
        filename:
          type: string
        hash:
          type: string
        reference_year:
          type: integer
          example: 2018
        error_message:
          type: string
        qc_tool_version:
          type: string
        steps:
          type: array
          items:
            $ref: "#/components/schemas/JobStep"

    JobStep:
      properties:
        step_nr:
          type: integer
          example: 1
        check_ident:
          type: string
          example: qc_tool.vector.unzip
        description:
          type: string
          example: Delivery file can be unzipped
        layers:
          type: array
        required:
          type: boolean
          example: true
        system:
          type: boolean
          example: true
        status:
          type: string
          example: ok
        messages:
          type: array
        attachment_filenames:
          type: array
          
    Error:
      required:
        - status
        - message
      properties:
        status:
          type: integer
          format: int32
          example: 400
        message:
          type: string
          
  # 2) Apply the API key globally to all operations
security:
  - ApiKeyAuth: []     # use the same name as under securitySchemes