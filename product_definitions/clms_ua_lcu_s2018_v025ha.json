{
  "description": "Urban Atlas 2018 status - harmonised CLMS file naming convention",
  "steps": [
    {
      "check_ident": "qc_tool.vector.unzip",
      "required": true
    },
    {
      "check_ident": "qc_tool.vector.naming",
      "required": true,
      "parameters": {
        "reference_year": "2018",
        "formats": [
          ".gdb",
          ".gpkg"
        ],
        "layer_names": {
          "reference": "^clms_ua_lcu_s2018_v025ha_(?P<aoi_code>[0-9a-zA-Z]{6})[0-9]{1}_[a-zA-Z]*_(?P<epsg_code>[0-9]{5})_v[0-9]{2}_r[0-9]{2}_[0-9]{8}"
        },
        "aoi_codes": [
                     "al001l",
            "al003l",
            "al004l",
            "al005l",
            "at001l",
            "at002l",
            "at003l",
            "at004l",
            "at005l",
            "at006l",
            "ba001l",
            "ba002l",
            "ba003l",
            "ba004l",
            "ba005l",
            "be001l",
            "be002l",
            "be003l",
            "be004l",
            "be005l",
            "be006l",
            "be007l",
            "be008l",
            "be009l",
            "be010l",
            "be011l",
            "bg001l",
            "bg002l",
            "bg003l",
            "bg004l",
            "bg005l",
            "bg006l",
            "bg007l",
            "bg008l",
            "bg009l",
            "bg010l",
            "bg011l",
            "bg013l",
            "bg014l",
            "bg015l",
            "bg016l",
            "bg017l",
            "bg018l",
            "ch001l",
            "ch002l",
            "ch003l",
            "ch004l",
            "ch005l",
            "ch006l",
            "ch007l",
            "ch008l",
            "ch009l",
            "ch010l",
            "cy001l",
            "cy501l",
            "cz001l",
            "cz002l",
            "cz003l",
            "cz004l",
            "cz005l",
            "cz006l",
            "cz007l",
            "cz008l",
            "cz009l",
            "cz010l",
            "cz011l",
            "cz013l",
            "cz014l",
            "cz016l",
            "cz018l",
            "de001l",
            "de002l",
            "de003l",
            "de004l",
            "de005l",
            "de007l",
            "de008l",
            "de009l",
            "de011l",
            "de012l",
            "de013l",
            "de014l",
            "de017l",
            "de018l",
            "de019l",
            "de020l",
            "de021l",
            "de025l",
            "de026l",
            "de027l",
            "de028l",
            "de029l",
            "de030l",
            "de031l",
            "de032l",
            "de033l",
            "de034l",
            "de035l",
            "de036l",
            "de037l",
            "de038l",
            "de039l",
            "de040l",
            "de042l",
            "de043l",
            "de044l",
            "de045l",
            "de048l",
            "de050l",
            "de051l",
            "de052l",
            "de053l",
            "de054l",
            "de055l",
            "de056l",
            "de057l",
            "de058l",
            "de059l",
            "de060l",
            "de061l",
            "de062l",
            "de063l",
            "de064l",
            "de065l",
            "de066l",
            "de067l",
            "de069l",
            "de071l",
            "de072l",
            "de073l",
            "de074l",
            "de077l",
            "de078l",
            "de079l",
            "de081l",
            "de082l",
            "de083l",
            "de084l",
            "de504l",
            "de505l",
            "de507l",
            "de508l",
            "de510l",
            "de513l",
            "de516l",
            "de517l",
            "de520l",
            "de522l",
            "de523l",
            "de524l",
            "de527l",
            "de529l",
            "de530l",
            "de532l",
            "de533l",
            "de534l",
            "de535l",
            "de537l",
            "de539l",
            "de540l",
            "de542l",
            "de544l",
            "de546l",
            "de547l",
            "de548l",
            "de549l",
            "dk001l",
            "dk002l",
            "dk003l",
            "dk004l",
            "ee001l",
            "ee002l",
            "ee003l",
            "el001l",
            "el002l",
            "el003l",
            "el004l",
            "el005l",
            "el006l",
            "el007l",
            "el008l",
            "el009l",
            "es001l",
            "es002l",
            "es003l",
            "es004l",
            "es005l",
            "es006l",
            "es007l",
            "es008l",
            "es009l",
            "es010l",
            "es011l",
            "es012l",
            "es013l",
            "es014l",
            "es015l",
            "es016l",
            "es017l",
            "es018l",
            "es019l",
            "es020l",
            "es021l",
            "es022l",
            "es023l",
            "es025l",
            "es026l",
            "es028l",
            "es031l",
            "es033l",
            "es034l",
            "es035l",
            "es039l",
            "es040l",
            "es041l",
            "es043l",
            "es044l",
            "es046l",
            "es048l",
            "es050l",
            "es053l",
            "es054l",
            "es057l",
            "es059l",
            "es070l",
            "es072l",
            "es501l",
            "es505l",
            "es506l",
            "es508l",
            "es510l",
            "es514l",
            "es515l",
            "es516l",
            "es519l",
            "es520l",
            "es521l",
            "es522l",
            "es523l",
            "es525l",
            "es527l",
            "es528l",
            "es529l",
            "es532l",
            "es533l",
            "es537l",
            "es538l",
            "es542l",
            "es543l",
            "es544l",
            "es545l",
            "es546l",
            "es547l",
            "es550l",
            "es552l",
            "fi001l",
            "fi002l",
            "fi003l",
            "fi004l",
            "fi007l",
            "fi008l",
            "fi009l",
            "fr001l",
            "fr003l",
            "fr004l",
            "fr006l",
            "fr007l",
            "fr008l",
            "fr009l",
            "fr010l",
            "fr011l",
            "fr012l",
            "fr013l",
            "fr014l",
            "fr016l",
            "fr017l",
            "fr018l",
            "fr019l",
            "fr020l",
            "fr021l",
            "fr022l",
            "fr023l",
            "fr024l",
            "fr025l",
            "fr026l",
            "fr027l",
            "fr028l",
            "fr030l",
            "fr032l",
            "fr034l",
            "fr035l",
            "fr036l",
            "fr037l",
            "fr038l",
            "fr039l",
            "fr040l",
            "fr042l",
            "fr043l",
            "fr044l",
            "fr045l",
            "fr046l",
            "fr047l",
            "fr048l",
            "fr049l",
            "fr050l",
            "fr051l",
            "fr052l",
            "fr053l",
            "fr056l",
            "fr057l",
            "fr058l",
            "fr059l",
            "fr060l",
            "fr061l",
            "fr062l",
            "fr063l",
            "fr064l",
            "fr065l",
            "fr066l",
            "fr067l",
            "fr068l",
            "fr069l",
            "fr073l",
            "fr074l",
            "fr076l",
            "fr077l",
            "fr079l",
            "fr082l",
            "fr084l",
            "fr086l",
            "fr090l",
            "fr093l",
            "fr096l",
            "fr099l",
            "fr104l",
            "fr203l",
            "fr205l",
            "fr207l",
            "fr208l",
            "fr209l",
            "fr214l",
            "fr215l",
            "fr304l",
            "fr324l",
            "fr505l",
            "fr506l",
            "fr519l",
            "hr001l",
            "hr002l",
            "hr003l",
            "hr004l",
            "hr005l",
            "hr006l",
            "hr007l",
            "hu001l",
            "hu002l",
            "hu003l",
            "hu004l",
            "hu005l",
            "hu006l",
            "hu007l",
            "hu008l",
            "hu009l",
            "hu010l",
            "hu011l",
            "hu012l",
            "hu013l",
            "hu014l",
            "hu015l",
            "hu016l",
            "hu017l",
            "hu018l",
            "hu019l",
            "ie001l",
            "ie002l",
            "ie003l",
            "ie004l",
            "ie005l",
            "is001l",
            "it001l",
            "it002l",
            "it003l",
            "it004l",
            "it005l",
            "it006l",
            "it007l",
            "it008l",
            "it009l",
            "it010l",
            "it011l",
            "it012l",
            "it013l",
            "it014l",
            "it015l",
            "it016l",
            "it017l",
            "it019l",
            "it020l",
            "it021l",
            "it022l",
            "it023l",
            "it024l",
            "it025l",
            "it026l",
            "it027l",
            "it028l",
            "it029l",
            "it030l",
            "it031l",
            "it032l",
            "it033l",
            "it034l",
            "it035l",
            "it036l",
            "it037l",
            "it038l",
            "it039l",
            "it040l",
            "it041l",
            "it042l",
            "it043l",
            "it045l",
            "it046l",
            "it047l",
            "it048l",
            "it052l",
            "it054l",
            "it056l",
            "it057l",
            "it058l",
            "it060l",
            "it061l",
            "it064l",
            "it065l",
            "it066l",
            "it067l",
            "it068l",
            "it069l",
            "it073l",
            "it501l",
            "it502l",
            "it503l",
            "it504l",
            "it505l",
            "it506l",
            "it507l",
            "it508l",
            "it509l",
            "it511l",
            "it512l",
            "it513l",
            "it514l",
            "it515l",
            "it516l",
            "it518l",
            "it519l",
            "it520l",
            "it521l",
            "it522l",
            "it523l",
            "it524l",
            "it525l",
            "it526l",
            "lt001l",
            "lt002l",
            "lt003l",
            "lt004l",
            "lt501l",
            "lt502l",
            "lu001l",
            "lv001l",
            "lv002l",
            "lv003l",
            "lv501l",
            "me001l",
            "mk001l",
            "mk003l",
            "mk004l",
            "mk005l",
            "mt001l",
            "nl001l",
            "nl002l",
            "nl003l",
            "nl004l",
            "nl005l",
            "nl006l",
            "nl007l",
            "nl008l",
            "nl009l",
            "nl010l",
            "nl012l",
            "nl013l",
            "nl014l",
            "nl015l",
            "nl016l",
            "nl020l",
            "nl026l",
            "nl028l",
            "nl030l",
            "nl032l",
            "nl503l",
            "nl504l",
            "nl505l",
            "nl507l",
            "nl511l",
            "nl512l",
            "nl513l",
            "nl514l",
            "nl515l",
            "nl519l",
            "nl520l",
            "nl521l",
            "nl522l",
            "nl524l",
            "nl529l",
            "no001l",
            "no002l",
            "no003l",
            "no004l",
            "no005l",
            "no006l",
            "pl001l",
            "pl002l",
            "pl003l",
            "pl004l",
            "pl005l",
            "pl006l",
            "pl007l",
            "pl008l",
            "pl009l",
            "pl010l",
            "pl011l",
            "pl012l",
            "pl013l",
            "pl014l",
            "pl015l",
            "pl016l",
            "pl017l",
            "pl018l",
            "pl019l",
            "pl020l",
            "pl021l",
            "pl022l",
            "pl024l",
            "pl025l",
            "pl026l",
            "pl027l",
            "pl028l",
            "pl029l",
            "pl030l",
            "pl031l",
            "pl032l",
            "pl033l",
            "pl034l",
            "pl035l",
            "pl036l",
            "pl037l",
            "pl038l",
            "pl039l",
            "pl040l",
            "pl041l",
            "pl042l",
            "pl043l",
            "pl044l",
            "pl045l",
            "pl046l",
            "pl047l",
            "pl048l",
            "pl049l",
            "pl051l",
            "pl052l",
            "pl506l",
            "pl508l",
            "pl511l",
            "pl512l",
            "pl513l",
            "pl514l",
            "pl516l",
            "pl517l",
            "pt001l",
            "pt002l",
            "pt003l",
            "pt004l",
            "pt005l",
            "pt007l",
            "pt008l",
            "pt009l",
            "pt014l",
            "pt016l",
            "pt019l",
            "pt505l",
            "ro001l",
            "ro002l",
            "ro003l",
            "ro004l",
            "ro005l",
            "ro006l",
            "ro007l",
            "ro008l",
            "ro009l",
            "ro010l",
            "ro011l",
            "ro012l",
            "ro013l",
            "ro014l",
            "ro015l",
            "ro016l",
            "ro017l",
            "ro018l",
            "ro019l",
            "ro020l",
            "ro021l",
            "ro022l",
            "ro501l",
            "ro502l",
            "ro503l",
            "ro504l",
            "ro505l",
            "ro506l",
            "ro507l",
            "ro508l",
            "ro509l",
            "ro510l",
            "ro511l",
            "ro512l",
            "ro513l",
            "rs001l",
            "rs002l",
            "rs003l",
            "rs004l",
            "rs005l",
            "rs006l",
            "rs008l",
            "rs009l",
            "rs011l",
            "rs012l",
            "rs013l",
            "rs014l",
            "rs015l",
            "rs016l",
            "se001l",
            "se002l",
            "se003l",
            "se004l",
            "se005l",
            "se006l",
            "se007l",
            "se008l",
            "se501l",
            "se502l",
            "se503l",
            "se505l",
            "si001l",
            "si002l",
            "sk001l",
            "sk002l",
            "sk003l",
            "sk004l",
            "sk005l",
            "sk006l",
            "sk007l",
            "sk008l",
            "tr001l",
            "tr002l",
            "tr003l",
            "tr004l",
            "tr006l",
            "tr007l",
            "tr008l",
            "tr009l",
            "tr010l",
            "tr011l",
            "tr012l",
            "tr013l",
            "tr014l",
            "tr015l",
            "tr016l",
            "tr018l",
            "tr019l",
            "tr021l",
            "tr022l",
            "tr023l",
            "tr024l",
            "tr025l",
            "tr026l",
            "tr027l",
            "tr028l",
            "tr029l",
            "tr030l",
            "tr031l",
            "tr032l",
            "tr033l",
            "tr034l",
            "tr035l",
            "tr036l",
            "tr037l",
            "tr038l",
            "tr039l",
            "tr040l",
            "tr041l",
            "tr042l",
            "tr043l",
            "tr044l",
            "tr045l",
            "tr046l",
            "tr047l",
            "tr048l",
            "tr049l",
            "tr050l",
            "tr051l",
            "tr052l",
            "tr053l",
            "tr054l",
            "tr055l",
            "tr056l",
            "tr057l",
            "tr058l",
            "tr059l",
            "tr060l",
            "tr061l",
            "tr062l",
            "tr063l",
            "tr064l",
            "tr065l",
            "tr066l",
            "tr067l",
            "tr068l",
            "tr069l",
            "tr070l",
            "tr071l",
            "tr072l",
            "tr073l",
            "tr074l",
            "tr075l",
            "tr076l",
            "tr077l",
            "tr078l",
            "tr079l",
            "uk001l",
            "uk002l",
            "uk003l",
            "uk004l",
            "uk006l",
            "uk007l",
            "uk008l",
            "uk009l",
            "uk010l",
            "uk011l",
            "uk012l",
            "uk013l",
            "uk014l",
            "uk016l",
            "uk017l",
            "uk018l",
            "uk019l",
            "uk023l",
            "uk024l",
            "uk025l",
            "uk026l",
            "uk027l",
            "uk029l",
            "uk033l",
            "uk050l",
            "uk056l",
            "uk515l",
            "uk516l",
            "uk517l",
            "uk518l",
            "uk520l",
            "uk528l",
            "uk539l",
            "uk546l",
            "uk550l",
            "uk551l",
            "uk552l",
            "uk553l",
            "uk557l",
            "uk558l",
            "uk559l",
            "uk560l",
            "uk562l",
            "uk566l",
            "uk568l",
            "uk569l",
            "uk571l",
            "xk001l",
            "xk002l",
            "xk003l"
        ],
        "epsg_codes": [
          "03035"],
        "documents": {
          "map.pdf": "_map.pdf$",
          "delivery_report.pdf": "_delivery_report.pdf$"
        },
        "excessive_layers_allowed": false,
        "boundary_source": "boundary_ua.gpkg"
      }
    },
    {
      "check_ident": "qc_tool.vector.attribute",
      "required": true,
      "parameters": {
        "layers": [
          "reference"
        ],
        "required": {
          "country": "string",
          "fua_name": "string",
          "fua_code": "string",
          "code_2018": "string",
          "class_2018": "string",
          "prod_date": "string",
          "identifier": "string",
          "comment": "string",
          "perimeter": "real",
          "area": "real"
        },
        "ignored": [
          "shape_area",
          "shape_length"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.epsg",
      "required": true,
      "parameters": {
        "layers": [
          "reference"
        ],
        "epsg": 3035,
        "auto_identify_epsg": false
      }
    },
    {
      "check_ident": "qc_tool.vector.import2pg",
      "required": true
    },
    {
      "check_ident": "qc_tool.vector.inspire",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.unique",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "unique_keys": [
          "identifier"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.enum",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "column_defs": [
          [
            "code_2018",
            [
              "11100",
              "11210",
              "11220",
              "11230",
              "11240",
              "11300",
              "12100",
              "12210",
              "12220",
              "12230",
              "12300",
              "12400",
              "13100",
              "13300",
              "13400",
              "14100",
              "14200",
              "21000",
              "22000",
              "23000",
              "24000",
              "25000",
              "31000",
              "32000",
              "33000",
              "40000",
              "50000",
              "91000",
              "92000"
            ]
          ]
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.singlepart",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.geometry",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.area",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "area_column_name": "area",
        "unit": 1,
        "tolerance": 0.5
      }
    },
    {
      "check_ident": "qc_tool.vector.gap",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "du_column_name": "fua_code"
      }
    },
    {
      "check_ident": "qc_tool.vector.mmu",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "complex_change": null,
        "general_where": [
          " layer.code_2018 LIKE '122%'",
          "OR",
          " (layer.code_2018 LIKE '1%'",
          "  AND layer.area >= 2500)",
          "OR",
          " (layer.code_2018 SIMILAR TO '[2-5]%'",
          "  AND layer.area >= 10000)",
          "OR",
          " layer.code_2018 LIKE '9%'"
        ],
        "exception_where": [
          " (meta.is_marginal",
          "  AND layer.area >= 100)",
          "OR",
          " EXISTS (SELECT FROM neighbours(meta.fid) WHERE code_2018 LIKE '9%')",
          "OR",
          " (layer.comment IS NOT NULL",
          "  AND has_comment(layer.comment, ARRAY['Area size exception (at Urban Atlas FUA boundary)',",
          "                                       'Area size exception (inside Urban Atlas FUA boundary)']))"
        ],
        "warning_where": [
          "(layer.code_2018 NOT LIKE '122%'",
          " AND EXISTS (SELECT FROM neighbours(meta.fid) WHERE code_2018 LIKE '122%')",
          " AND layer.area >= 500)"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.mmw",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "mmw": 10.0,
        "general_where": "FALSE",
        "exception_where": "layer.code_2018 LIKE '122%'"
      }
    },
    {
      "check_ident": "qc_tool.vector.overlap",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.neighbour",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "code_column_names": [
          "code_2018"
        ],
        "exception_where": [
          "FALSE"
        ],
        "error_where": [
          "layer.code_2018 NOT LIKE '122%'"
        ]
      }
    }
  ]
}
