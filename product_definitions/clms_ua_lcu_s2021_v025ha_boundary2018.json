{
  "description": "Urban Atlas 2021 status with 2018 (EEA38) boundary definitioin.",
  "steps": [
    {
      "check_ident": "qc_tool.vector.unzip",
      "required": true
    },
    {
      "check_ident": "qc_tool.vector.naming",
      "required": true,
      "parameters": {
        "reference_year": "2021",
        "formats": [
          ".gdb",
          ".gpkg"
        ],
        "layer_names": {
          "reference": "^clms_ua_lcu_s2021_v025ha_(?P<aoi_code>[0-9a-z]{6})[0-9]{1}_(?P<fua_name>[a-z_]+)_(?P<epsg_code>[0-9]{5})_v[0-9]{2}_r[0-9]{2}_[0-9]{8}"
        },
        "aoi_codes": [
          "el001l",
          "cz009l",
          "cz018l",
          "de018l",
          "de021l",
          "ee001l",
          "de036l",
          "de067l",
          "de504l",
          "de524l",
          "de529l",
          "de530l",
          "de542l",
          "es001l",
          "es005l",
          "es012l",
          "es041l",
          "fr018l",
          "fr019l",
          "pl004l",
          "es031l",
          "es035l",
          "es040l",
          "fr026l",
          "fr027l",
          "fr028l",
          "fr035l",
          "fr036l",
          "fr059l",
          "fr062l",
          "fr063l",
          "fr214l",
          "fr304l",
          "hr007l",
          "hu013l",
          "hu017l",
          "ie005l",
          "it003l",
          "it009l",
          "it033l",
          "it036l",
          "it042l",
          "it065l",
          "it501l",
          "nl008l",
          "nl012l",
          "lv001l",
          "lv003l",
          "pl042l",
          "pl043l",
          "ro009l",
          "rs001l",
          "rs003l",
          "de014l",
          "de025l",
          "de028l",
          "de029l",
          "de072l",
          "de513l",
          "de527l",
          "ro012l",
          "ro020l",
          "ro506l",
          "tr047l",
          "tr056l",
          "tr066l",
          "tr067l",
          "es011l",
          "es023l",
          "es510l",
          "es516l",
          "es519l",
          "es544l",
          "es550l",
          "fr038l",
          "fr039l",
          "fr045l",
          "fr047l",
          "fr049l",
          "fr050l",
          "fr093l",
          "es506l",
          "nl028l",
          "nl505l",
          "pl008l",
          "no005l",
          "es525l",
          "fi003l",
          "fr003l",
          "fr008l",
          "cz005l",
          "bg015l",
          "ch002l",
          "ch008l",
          "cy001l",
          "cz001l",
          "cz010l",
          "cz014l",
          "de020l",
          "de032l",
          "fr099l",
          "fr215l",
          "fr506l",
          "hu003l",
          "ie003l",
          "it016l",
          "it019l",
          "it024l",
          "it025l",
          "it037l",
          "it056l",
          "it057l",
          "nl020l",
          "nl026l",
          "nl512l",
          "nl514l",
          "pl002l",
          "pl010l",
          "pl020l",
          "pl022l",
          "pl040l",
          "pl044l",
          "pl052l",
          "pt002l",
          "pt005l",
          "ro004l",
          "ro007l",
          "ro011l",
          "rs011l",
          "se004l",
          "se502l",
          "si001l",
          "sk003l",
          "bg009l",
          "de044l",
          "sk008l",
          "tr009l",
          "tr019l",
          "de055l",
          "nl521l",
          "ro501l",
          "tr028l",
          "tr031l",
          "tr046l",
          "tr052l",
          "tr068l",
          "tr069l",
          "ch005l",
          "cz002l",
          "cz008l",
          "de005l",
          "de008l",
          "de031l",
          "de062l",
          "de063l",
          "de520l",
          "dk001l",
          "ee002l",
          "el004l",
          "es003l",
          "es004l",
          "es026l",
          "es039l",
          "es057l",
          "es527l",
          "es529l",
          "es545l",
          "es546l",
          "fr006l",
          "fr007l",
          "fr017l",
          "fr030l",
          "hr003l",
          "hu008l",
          "hu010l",
          "hu015l",
          "ie001l",
          "it004l",
          "it006l",
          "it013l",
          "it041l",
          "it069l",
          "it509l",
          "it521l",
          "it522l",
          "nl001l",
          "lv501l",
          "nl519l",
          "pl005l",
          "pl025l",
          "pl033l",
          "pl037l",
          "pt016l",
          "ro010l",
          "ro513l",
          "se001l",
          "se002l",
          "se501l",
          "sk001l",
          "at002l",
          "at004l",
          "at006l",
          "sk007l",
          "tr006l",
          "tr010l",
          "de084l",
          "ro503l",
          "tr025l",
          "tr030l",
          "tr048l",
          "tr051l",
          "tr058l",
          "de048l",
          "de048l",
          "ch001l",
          "ch004l",
          "ch006l",
          "nl507l",
          "de027l",
          "de030l",
          "de073l",
          "de082l",
          "de522l",
          "de523l",
          "de549l",
          "el003l",
          "es002l",
          "es014l",
          "es018l",
          "es028l",
          "es043l",
          "es072l",
          "es508l",
          "es521l",
          "fr012l",
          "fr032l",
          "fr040l",
          "fr043l",
          "fr053l",
          "fr057l",
          "fr058l",
          "fr061l",
          "fr077l",
          "hr002l",
          "hu002l",
          "hu004l",
          "it020l",
          "it023l",
          "it031l",
          "it058l",
          "it068l",
          "it512l",
          "it518l",
          "lt001l",
          "mk004l",
          "nl005l",
          "nl014l",
          "nl016l",
          "no006l",
          "pl017l",
          "pl018l",
          "de535l",
          "el005l",
          "es009l",
          "es016l",
          "es017l",
          "es025l",
          "es059l",
          "es514l",
          "es515l",
          "es520l",
          "es537l",
          "fi002l",
          "fi004l",
          "fr001l",
          "fr025l",
          "fr034l",
          "fr051l",
          "fr079l",
          "nl520l",
          "no001l",
          "pl019l",
          "pl029l",
          "pl039l",
          "pl047l",
          "pl048l",
          "pl516l",
          "ro006l",
          "ro008l",
          "ro510l",
          "ro511l",
          "rs005l",
          "rs014l",
          "se005l",
          "be006l",
          "be007l",
          "be009l",
          "bg002l",
          "bg011l",
          "de045l",
          "tr002l",
          "tr011l",
          "tr013l",
          "es022l",
          "it007l",
          "nl009l",
          "nl522l",
          "ro021l",
          "ro022l",
          "ro504l",
          "ro505l",
          "tr027l",
          "tr034l",
          "tr039l",
          "tr041l",
          "tr042l",
          "tr063l",
          "tr065l",
          "it046l",
          "de533l",
          "fr074l",
          "bg014l",
          "tr044l",
          "tr050l",
          "bg018l",
          "ch003l",
          "ch009l",
          "cz016l",
          "de017l",
          "de026l",
          "de035l",
          "de043l",
          "de508l",
          "de510l",
          "de517l",
          "de539l",
          "es007l",
          "es054l",
          "es070l",
          "fi001l",
          "fi008l",
          "fr021l",
          "fr044l",
          "fr046l",
          "fr056l",
          "fr090l",
          "fr203l",
          "fr209l",
          "hu001l",
          "hu006l",
          "hu014l",
          "it008l",
          "at001l",
          "at005l",
          "bg003l",
          "sk002l",
          "de058l",
          "de059l",
          "de061l",
          "de064l",
          "de066l",
          "de074l",
          "de081l",
          "de083l",
          "de507l",
          "de547l",
          "dk002l",
          "dk003l",
          "it010l",
          "it011l",
          "it014l",
          "it021l",
          "bg006l",
          "bg008l",
          "el009l",
          "es006l",
          "es008l",
          "de053l",
          "tr001l",
          "tr003l",
          "it066l",
          "it504l",
          "it511l",
          "it514l",
          "it520l",
          "it524l",
          "lt002l",
          "nl002l",
          "nl007l",
          "it022l",
          "it040l",
          "it048l",
          "it505l",
          "it508l",
          "mk003l",
          "nl004l",
          "nl006l",
          "fr066l",
          "fr104l",
          "lv002l",
          "mk001l",
          "fr084l",
          "it045l",
          "hr006l",
          "it064l",
          "fr064l",
          "fr069l",
          "fr073l",
          "fr065l",
          "bg004l",
          "pl003l",
          "pl009l",
          "ro014l",
          "ro509l",
          "it028l",
          "it029l",
          "ro018l",
          "tr024l",
          "tr071l",
          "it027l",
          "nl010l",
          "tr016l",
          "ro508l",
          "tr072l",
          "it030l",
          "tr018l",
          "tr074l",
          "nl032l",
          "lt004l",
          "me001l",
          "nl503l",
          "nl504l",
          "nl511l",
          "pl012l",
          "pl014l",
          "pl016l",
          "no003l",
          "no004l",
          "pl021l",
          "pl028l",
          "pl035l",
          "pl045l",
          "pt003l",
          "pt007l",
          "ro001l",
          "rs015l",
          "rs016l",
          "se007l",
          "se503l",
          "ba001l",
          "be008l",
          "be010l",
          "de051l",
          "tr008l",
          "tr012l",
          "xk003l",
          "nl524l",
          "nl529l",
          "bg005l",
          "es547l",
          "ro017l",
          "tr015l",
          "tr022l",
          "rs004l",
          "ro015l",
          "it001l",
          "fr208l",
          "fr505l",
          "hu005l",
          "de009l",
          "dk004l",
          "it002l",
          "it054l",
          "de007l",
          "it513l",
          "it516l",
          "tr045l",
          "tr076l",
          "tr079l",
          "ie002l",
          "it005l",
          "it015l",
          "it035l",
          "it039l",
          "it060l",
          "it519l",
          "it526l",
          "mt001l",
          "nl013l",
          "lt502l",
          "pl001l",
          "pl011l",
          "pl030l",
          "ro019l",
          "tr026l",
          "tr029l",
          "tr033l",
          "tr038l",
          "tr040l",
          "fr068l",
          "el006l",
          "tr070l",
          "tr062l",
          "cz007l",
          "de002l",
          "ro013l",
          "be001l",
          "xk002l",
          "fr009l",
          "fr086l",
          "pl031l",
          "pl034l",
          "pl049l",
          "pl511l",
          "pt004l",
          "rs002l",
          "rs008l",
          "rs013l",
          "se008l",
          "si002l",
          "ba003l",
          "ba004l",
          "ba005l",
          "be003l",
          "be004l",
          "be011l",
          "sk004l",
          "sk006l",
          "bg010l",
          "de057l",
          "bg016l",
          "cy501l",
          "cz003l",
          "fr207l",
          "de039l",
          "it502l",
          "tr078l",
          "it061l",
          "de532l",
          "de516l",
          "de034l",
          "de546l",
          "bg017l",
          "ch010l",
          "cz006l",
          "cz011l",
          "de013l",
          "de019l",
          "de040l",
          "de060l",
          "de069l",
          "de077l",
          "de078l",
          "de079l",
          "de505l",
          "ee003l",
          "es013l",
          "es019l",
          "es021l",
          "es046l",
          "es050l",
          "es522l",
          "es523l",
          "es528l",
          "es532l",
          "es533l",
          "es538l",
          "es543l",
          "fr004l",
          "fr010l",
          "fr011l",
          "fr013l",
          "fr014l",
          "fr020l",
          "fr022l",
          "fr024l",
          "fr037l",
          "fr042l",
          "fr052l",
          "fr096l",
          "fr519l",
          "hr004l",
          "hu007l",
          "hu009l",
          "ie004l",
          "is001l",
          "it012l",
          "it017l",
          "it032l",
          "it034l",
          "it038l",
          "it043l",
          "it052l",
          "it503l",
          "it506l",
          "lt003l",
          "mk005l",
          "nl015l",
          "lu001l",
          "ro005l",
          "rs006l",
          "rs012l",
          "se006l",
          "se505l",
          "al004l",
          "al005l",
          "at003l",
          "ba002l",
          "be002l",
          "be005l",
          "bg001l",
          "sk005l",
          "bg007l",
          "bg013l",
          "de054l",
          "tr007l",
          "es552l",
          "fr067l",
          "nl030l",
          "nl513l",
          "nl515l",
          "pl006l",
          "pl013l",
          "pl015l",
          "no002l",
          "pl026l",
          "pl036l",
          "pl038l",
          "pl041l",
          "pl046l",
          "pl051l",
          "pl506l",
          "pl512l",
          "pl513l",
          "pl517l",
          "pt019l",
          "ro002l",
          "tr014l",
          "ro016l",
          "tr023l",
          "tr073l",
          "ro507l",
          "tr032l",
          "tr035l",
          "tr036l",
          "tr049l",
          "tr053l",
          "tr055l",
          "tr057l",
          "tr059l",
          "tr060l",
          "es044l",
          "de050l",
          "de011l",
          "ch007l",
          "cz004l",
          "cz013l",
          "de001l",
          "de003l",
          "de012l",
          "de033l",
          "de037l",
          "de042l",
          "de056l",
          "de065l",
          "de071l",
          "de534l",
          "de540l",
          "de544l",
          "de548l",
          "el002l",
          "el008l",
          "es010l",
          "es015l",
          "es020l",
          "es033l",
          "es034l",
          "es048l",
          "es053l",
          "es501l",
          "es505l",
          "es542l",
          "fi007l",
          "fi009l",
          "fr016l",
          "fr023l",
          "fr048l",
          "fr060l",
          "fr076l",
          "fr205l",
          "fr324l",
          "hr001l",
          "hr005l",
          "hu011l",
          "hu012l",
          "hu016l",
          "hu018l",
          "hu019l",
          "it047l",
          "it067l",
          "it073l",
          "it507l",
          "it515l",
          "it523l",
          "it525l",
          "lt501l",
          "pl007l",
          "pl024l",
          "pl027l",
          "pl032l",
          "pl508l",
          "pl514l",
          "pt001l",
          "pt008l",
          "pt009l",
          "pt014l",
          "pt505l",
          "ro003l",
          "ro512l",
          "rs009l",
          "se003l",
          "al001l",
          "al003l",
          "de052l",
          "tr004l",
          "tr021l",
          "xk001l",
          "nl003l",
          "de038l",
          "fr082l",
          "el007l",
          "it026l",
          "tr075l",
          "ro502l",
          "tr037l",
          "tr043l",
          "tr054l",
          "tr061l",
          "tr064l",
          "tr077l",
          "de537l",
          "de537l",
          "de004l"
        ],
        "epsg_codes": [
          "03035"
        ],
        "documents": {
          "map.pdf": "_map.pdf$",
          "delivery_report.pdf": "_delivery_report.pdf$"
        },
        "excessive_layers_allowed": false,
        "boundary_source": "boundary_ua2018_eea38.gpkg"
      }
    },
    {
      "check_ident": "qc_tool.vector.attribute",
      "required": true,
      "parameters": {
        "layers": [
          "reference"
        ],
        "required": {
          "country": "string",
          "fua_name": "string",
          "fua_code": "string",
          "code_2021": "string",
          "class_2021": "string",
          "prod_date": "string",
          "identifier": "string",
          "comment": "string",
          "perimeter": "real",
          "area": "real"
        },
        "ignored": [
          "shape_area",
          "shape_length"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.epsg",
      "required": true,
      "parameters": {
        "layers": [
          "reference"
        ],
        "epsg": 3035,
        "auto_identify_epsg": false
      }
    },
    {
      "check_ident": "qc_tool.vector.import2pg",
      "required": true
    },
    {
      "check_ident": "qc_tool.vector.inspire",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.unique",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "unique_keys": [
          "identifier"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.enum",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "column_defs": [
          [
            "code_2021",
            [
              "11100",
              "11210",
              "11220",
              "11230",
              "11240",
              "11300",
              "12100",
              "12210",
              "12220",
              "12230",
              "12300",
              "12400",
              "13100",
              "13300",
              "13400",
              "14110",
              "14120",
              "14130",
              "14200",
              "21000",
              "22000",
              "23000",
              "24000",
              "25000",
              "31000",
              "32000",
              "33000",
              "40000",
              "50000",
              "91000",
              "92000"
            ]
          ]
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.singlepart",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.geometry",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.area",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "area_column_name": "area",
        "unit": 1,
        "tolerance": 0.5
      }
    },
    {
      "check_ident": "qc_tool.vector.gap",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "du_column_name": "fua_code"
      }
    },
    {
      "check_ident": "qc_tool.vector.mmu",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "complex_change": null,
        "general_where": [
          " layer.code_2021 LIKE '122%'",
          "OR",
          " (layer.code_2021 LIKE '1%'",
          "  AND layer.area >= 2500)",
          "OR",
          " (layer.code_2021 SIMILAR TO '[2-5]%'",
          "  AND layer.area >= 10000)",
          "OR",
          " layer.code_2021 LIKE '9%'"
        ],
        "exception_where": [
          " (meta.is_marginal",
          "  AND layer.area >= 100)",
          "OR",
          " EXISTS (SELECT FROM neighbours(meta.fid) WHERE code_2021 LIKE '9%')",
          "OR",
          " (layer.comment IS NOT NULL",
          "  AND has_comment(layer.comment, ARRAY['Area size exception (at Urban Atlas FUA boundary)',",
          "                                       'Area size exception (inside Urban Atlas FUA boundary)']))"
        ],
        "warning_where": [
          "(layer.code_2021 NOT LIKE '122%'",
          " AND EXISTS (SELECT FROM neighbours(meta.fid) WHERE code_2021 LIKE '122%')",
          " AND layer.area >= 500)"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.mmw",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "mmw": 10.0,
        "general_where": "FALSE",
        "exception_where": "layer.code_2021 LIKE '122%'"
      }
    },
    {
      "check_ident": "qc_tool.vector.overlap",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ]
      }
    },
    {
      "check_ident": "qc_tool.vector.neighbour",
      "required": false,
      "parameters": {
        "layers": [
          "reference"
        ],
        "code_column_names": [
          "code_2021"
        ],
        "exception_where": [
          "FALSE"
        ],
        "error_where": [
          "layer.code_2021 NOT LIKE '122%'"
        ]
      }
    }
  ]
}
