{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "CLMS QC Tool API documentation",
    "license": {
      "name": "EUPL"
    }
  },
  "servers": [
    {
      "url": "http://localhost:8000/api"
    }
  ],
  "paths": {
    "/register-delivery": {
      "post": {
        "summary": "Register a new delivery from already uploaded file",
        "operationId": "registerDelivery",
        "tags": [
          "Registering a new delivery"
        ],
        "requestBody": {
          "description": "Specify full path of the uploaded file.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "uploaded_file": {
                    "type": "string",
                    "example": "/mnt/qc_tool_incoming/incoming/guest/example_delivery.zip"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Id of the registered delivery",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Deliery successfully registered"
                    },
                    "delivery_id": {
                      "type": "integer",
                      "format": "int64",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/register-delivery-s3": {
      "post": {
        "summary": "Register a new delivery from S3 storage",
        "operationId": "registerDeliveryS3",
        "tags": [
          "Registering a new delivery"
        ],
        "requestBody": {
          "description": "Specify S3 access credentials and delivery S3 object prefix",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "host": {
                    "type": "string",
                    "example": "https://s3.waw3-1.cloudferro.com"
                  },
                  "access_key": {
                    "type": "string",
                    "example": "dasldkQ123"
                  },
                  "secret_key": {
                    "type": "string",
                    "example": "35H12refsaadf"
                  },
                  "bucketname": {
                    "type": "string",
                    "example": "delivery"
                  },
                  "key_prefix": {
                    "type": "string",
                    "example": "20231127/TCD/CLMS_HRL_VLCC_TCD_S2020_R10m_E49N35_03035_V01_R00"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Id of the registered delivery",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Deliery successfully registered"
                    },
                    "delivery_id": {
                      "type": "integer",
                      "format": "int64",
                      "example": 123
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/delivery-list": {
      "get": {
        "summary": "List all deliveries",
        "operationId": "listDeliveries",
        "tags": [
          "Deliveries"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "offset",
            "type": "integer",
            "default": 0,
            "description": "The number of items to skip before start of the current page"
          },
          {
            "in": "query",
            "name": "limit",
            "type": "integer",
            "default": 20,
            "description": "the number of items to return on one page"
          },
          {
            "in": "query",
            "name": "sort",
            "type": "string",
            "default": "id",
            "description": "the property to sort the results by"
          },
          {
            "in": "query",
            "name": "order",
            "type": "string",
            "default": "desc",
            "description": "the sort order (asc or desc)"
          }
        ],
        "responses": {
          "200": {
            "description": "An array of deliveries",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "total": {
                      "type": "integer",
                      "description": "total number of all deliveries for current user."
                    },
                    "offset": {
                      "type": "integer",
                      "description": "the current offset (number of skipped items before current page)"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "the current limit (current page size)"
                    },
                    "next_offset": {
                      "type": "integer",
                      "description": "the offset of the next page (or 0 if we are on last page)"
                    },
                    "deliveries": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Delivery"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/product-list": {
      "get": {
        "summary": "List all products that can be checked",
        "operationId": "listProducts",
        "tags": [
          "Products"
        ],
        "responses": {
          "200": {
            "description": "An array of products",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "products": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Product"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/product-info/{product_ident}": {
      "get": {
        "summary": "Show all QC checks for a product",
        "operationId": "productInfo",
        "tags": [
          "Products"
        ],
        "parameters": [
          {
            "name": "product_ident",
            "in": "path",
            "required": true,
            "description": "The product ident to show information about",
            "schema": {
              "type": "string",
              "example": "cz_2018"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "showing product info"
                    },
                    "data": {
                      "$ref": "#/components/schemas/JobTemplate"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/create-job": {
      "post": {
        "summary": "Run a new QC job",
        "operationId": "createJob",
        "tags": [
          "Running a new QC job"
        ],
        "requestBody": {
          "description": "Specify delivery_id, product_ident, skip_steps",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "delivery_id",
                  "product_ident"
                ],
                "properties": {
                  "delivery_id": {
                    "type": "integer",
                    "example": 1
                  },
                  "product_ident": {
                    "type": "string",
                    "example": "cz_2018"
                  },
                  "skip_steps": {
                    "type": "string",
                    "example": "8,9"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "UUID of the created job",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Job successfully created"
                    },
                    "job_uuid": {
                      "type": "string",
                      "format": "uuid"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/job-result/{job_uuid}": {
      "get": {
        "summary": "Specific job results in json format",
        "operationId": "jobResult",
        "tags": [
          "Job Result"
        ],
        "parameters": [
          {
            "name": "job_uuid",
            "in": "path",
            "required": true,
            "description": "The uuid to get results of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "showing job result in json format"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Job"
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/job-result-pdf/{job_uuid}": {
      "get": {
        "summary": "Specific job results in pdf format",
        "operationId": "jobResultPdf",
        "tags": [
          "Job Result PDF"
        ],
        "parameters": [
          {
            "name": "job_uuid",
            "in": "path",
            "required": true,
            "description": "The uuid to get results of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/pdf": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/job-history/{delivery_id}": {
      "get": {
        "summary": "Specific delivery job history",
        "operationId": "jobHistory",
        "tags": [
          "Job History"
        ],
        "parameters": [
          {
            "name": "delivery_id",
            "in": "path",
            "required": true,
            "description": "The delivery_id to get history of",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Expected response to a valid request",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "showing job history of specific delivery"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Job"
                      }
                    }
                  }
                }
              }
            }
          },
          "default": {
            "description": "unexpected error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/submit-delivery-to-eea": {
      "post": {
        "summary": "Submit job reports to EEA",
        "operationId": "submitDeliveryToEEA",
        "tags": [
          "Submission of deliveries to EEA"
        ],
        "requestBody": {
          "description": "Specify delivery_id",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "delivery_id"
                ],
                "properties": {
                  "delivery_id": {
                    "type": "integer",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delivery has been submitted",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "status": {
                      "type": "string",
                      "example": "ok"
                    },
                    "message": {
                      "type": "string",
                      "example": "Delivery successfully submitted to EEA"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "query",
        "name": "apikey"
      }
    },
    "schemas": {
      "Delivery": {
        "required": [
          "id",
          "name",
          "filename",
          "user",
          "date_uploaded",
          "size_bytes"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "name": {
            "type": "string"
          },
          "tag": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "user": {
            "type": "string"
          },
          "date_uploaded": {
            "type": "string"
          }
        }
      },
      "Product": {
        "required": [
          "product_ident",
          "description"
        ],
        "properties": {
          "product_ident": {
            "type": "string",
            "example": "cz_2018"
          },
          "description": {
            "type": "string",
            "example": "Coastal Zones 2018 status"
          }
        }
      },
      "JobTemplate": {
        "properties": {
          "job_uuid": {
            "type": "string",
            "example": null
          },
          "status": {
            "type": "string",
            "example": "cz_2018"
          },
          "description": {
            "type": "string",
            "example": "Coastal Zones 2018 status"
          },
          "user_name": {
            "type": "string"
          },
          "job_start_date": {
            "type": "string",
            "example": null
          },
          "job_finish_date": {
            "type": "string",
            "example": null
          },
          "filename": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "reference_year": {
            "type": "integer",
            "example": 2018
          },
          "error_message": {
            "type": "string"
          },
          "qc_tool_version": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobStep"
            }
          }
        }
      },
      "Job": {
        "required": [
          "job_uuid"
        ],
        "properties": {
          "job_uuid": {
            "type": "string",
            "format": "uuid"
          },
          "status": {
            "type": "string",
            "example": "cz_2018"
          },
          "description": {
            "type": "string",
            "example": "Coastal Zones 2018 status"
          },
          "user_name": {
            "type": "string"
          },
          "job_start_date": {
            "type": "string"
          },
          "job_finish_date": {
            "type": "string"
          },
          "filename": {
            "type": "string"
          },
          "hash": {
            "type": "string"
          },
          "reference_year": {
            "type": "integer",
            "example": 2018
          },
          "error_message": {
            "type": "string"
          },
          "qc_tool_version": {
            "type": "string"
          },
          "steps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobStep"
            }
          }
        }
      },
      "JobStep": {
        "properties": {
          "step_nr": {
            "type": "integer",
            "example": 1
          },
          "check_ident": {
            "type": "string",
            "example": "qc_tool.vector.unzip"
          },
          "description": {
            "type": "string",
            "example": "Delivery file can be unzipped"
          },
          "layers": {
            "type": "array"
          },
          "required": {
            "type": "boolean",
            "example": true
          },
          "system": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "string",
            "example": "ok"
          },
          "messages": {
            "type": "array"
          },
          "attachment_filenames": {
            "type": "array"
          }
        }
      },
      "Error": {
        "required": [
          "status",
          "message"
        ],
        "properties": {
          "status": {
            "type": "integer",
            "format": "int32",
            "example": 400
          },
          "message": {
            "type": "string"
          }
        }
      }
    }
  },
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "externalDocs": {
    "url": "https://github.com/eea/copernicus_quality_tools/wiki/CLMS-QC-Tool-API",
    "description": "API guide on CLMS QC Tool Wiki"
  }
}