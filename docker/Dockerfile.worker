FROM ubuntu:focal

LABEL author=gisat.cz
LABEL description="QC tool environment, worker service."

ARG VERSION

ENV PYTHONPATH=/usr/local/src/copernicus_quality_tools/src
ENV VERSION=${VERSION:-${DOCKER_TAG:-master}}

# Set environment variables for INSPIRE validator
ENV DEBIAN_FRONTEND=noninteractive
ENV ETF_DIR=/etf
ENV ETF_LOG_DIR=/etf/logs
ENV ETF_RELATIVE_URL=validator
ENV ETF_WEBAPP_VERSION=latest
ENV ETF_TESTDRIVER_BSX_VERSION=latest
ENV ETF_GMLGEOX_VERSION=latest
ENV ETF_TESTDRIVER_SUI_VERSION=latest
ENV ETF_TESTDRIVER_TE_VERSION=latest
ENV REPO_URL=https://services.interactive-instruments.de/etfdev-af/etf-public-dev
ENV REPO_USER=etf-public-dev
ENV REPO_PWD=etf-public-dev
ENV ETF_DL_TESTPROJECTS_ZIP=https://github.com/inspire-eu-validation/ets-repository/archive/v2024.3.zip
ENV ETF_DL_TESTPROJECTS_DIR_NAME=inspire-ets-repository
ENV ETF_DL_TESTPROJECTS_OVERWRITE_EXISTING=true
ENV MAX_MEM=max
ENV HTTP_PROXY_HOST=localhost
ENV HTTP_PROXY_PORT=3128
ENV HTTP_PROXY_USERNAME=none
ENV HTTP_PROXY_PASSWORD=none
ENV HTTPS_PROXY_HOST=none
ENV HTTPS_PROXY_PORT=3129
ENV HTTPS_PROXY_USERNAME=none
ENV HTTPS_PROXY_PASSWORD=none
# Set the Jetty version for INSPIRE validator.
ENV JETTY_VERSION=9.4.56.v20240826
ENV JETTY_HOME=/usr/local/jetty

# Build the initial environment.
RUN echo "$VERSION" >/etc/qc_tool_version.txt \
    && apt-get -y update \
    && apt-get -y upgrade \
    && apt-get -y install wget unzip time gnupg2

# Install python and bootstrap pip.
RUN cd /usr/local/src \
    && apt-get -y install python3 python3-distutils \
    && wget --no-verbose https://bootstrap.pypa.io/get-pip.py \
    && python3 get-pip.py

# Install environment.
RUN apt-get -y install gdal-bin python3-gdal \
    && apt-get -y install python3-psycopg2 \
    && pip3 install numpy \
    && pip3 install boto3 \
    && pip3 install checksumdir \
    && pip3 install scikit-image reportlab==3.6.13 requests \
    && pip3 install bottle \
    && pip3 install supervisor

# Install INSPIRE validator, squid proxy and apache reverse proxy
RUN apt-get install -y --no-install-recommends \
    openjdk-11-jre \
    curl \
    nano \
    tini \
    net-tools \
    lsof \
    squid \
    openssl \
    apache2 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install jetty for the INSPIRE validator
RUN mkdir -p "$JETTY_HOME"

# Download and unpack Jetty
RUN wget https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/${JETTY_VERSION}/jetty-distribution-${JETTY_VERSION}.tar.gz -O /tmp/jetty.tar.gz && \
tar -xzf /tmp/jetty.tar.gz -C ${JETTY_HOME} --strip-components=1 && \
rm /tmp/jetty.tar.gz

# Copy supervisor config file.
COPY ./supervisord.conf /etc

# Expose the port of supervisor.
EXPOSE 9001

# Install postgresql version 14 & postgis version 3.
#
# Create the file postgresql apt repository configuration.
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

# Import the repository signing key:
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

# Update the package lists to include PostgreSQL.
RUN apt-get update

# During install tzdata package needs timezone having been set already.
ENV TZ=UTC
RUN apt-get -y install postgresql-14-postgis-3

# Configure the qc tool database.
#
# We insert qc_job/trust clause just *before* 127.0.0.1/md5 clause in pg_hba.conf,
# so that qc_job is thus allowed to connect to qc_tool_db without password even
# when connecting to 127.0.0.1.
USER postgres
COPY ./init_qc_tool_db.sql /usr/local/src
RUN sed --in-place=.orig --expression='/^# IPv4 local connections/a host  qc_tool_db  qc_job  all  trust' /etc/postgresql/14/main/pg_hba.conf \
    && echo "listen_addresses='*'" >>/etc/postgresql/14/main/postgresql.conf \
    && /etc/init.d/postgresql start \
    && psql --file=/usr/local/src/init_qc_tool_db.sql \
    && /etc/init.d/postgresql stop
USER root

# Install qc tool.
RUN cd /usr/local/src \
    && wget --no-verbose https://github.com/eea/copernicus_quality_tools/archive/${VERSION}.zip \
    && unzip -q ./${VERSION}.zip \
    && rm ./${VERSION}.zip \
    && mv ./copernicus_quality_tools-${VERSION} ./copernicus_quality_tools \
    && echo ${VERSION} >./copernicus_quality_tools/VERSION


# Download and extract the INSPIRE Validator WAR file and the ui.zip file
RUN wget --no-verbose -O /tmp/inspire-validator.zip \
    https://github.com/INSPIRE-MIF/helpdesk-validator/releases/download/v2024.3/inspire-validator-2024.3.zip \
    && unzip -q /tmp/inspire-validator.zip -d /tmp \
    && mv /tmp/validator.war /usr/local/jetty/webapps/${ETF_RELATIVE_URL}.war \
    && mv /tmp/ui.zip ui.zip \
    && rm -rf /tmp/inspire-validator.zip /tmp/validator.war /tmp/ui.zip

# Download the INSPIRE registry resources
# https://github.com/INSPIRE-MIF/helpdesk-validator/releases/download/v2024.3/inspire-registry-resources.zip
RUN mkdir -p /tmp/inspire-registry-resources \
    && wget --no-verbose -O /tmp/inspire-registry-resources.zip \
    https://github.com/INSPIRE-MIF/helpdesk-validator/releases/download/v2024.3/inspire-registry-resources.zip \
    && unzip -q /tmp/inspire-registry-resources.zip -d /tmp/inspire-registry-resources \
    && mkdir -p ${ETF_DIR}/inspire-registry-resources \
    && mv /tmp/inspire-registry-resources ${ETF_DIR}/inspire-registry-resources/

# Copy INSPIRE validator resources and prepare directories
COPY res/docker-entrypoint.sh /

# Copy the Squid configuration, ensure correct permissions and create required directories.
COPY res/squid_ubuntu.conf /etc/squid/squid.conf
RUN chmod 644 /etc/squid/squid.conf
RUN mkdir -p /var/log/supervisor /var/spool/squid /var/log/squid /var/run/squid \
    && cd /var/spool/squid \
    && chown -R proxy:proxy /var/spool/squid /var/log/squid /var/run/squid \
    && chmod -R 755 /var/run/squid /var/log/squid /var/spool/squid \
    && touch /var/log/squid/access.log /var/log/squid/cache.log \
    && chown proxy:proxy /var/log/squid/*.log

# Initialize Squid cache
RUN squid -N -z && chown -R proxy:proxy /var/spool/squid

# Copy the Apache configuration and enable correct Apache modules
#COPY res/squid.conf /etc/squid/squid.conf
COPY res/proxy_1.conf /etc/apache2/sites-available/proxy_1.conf
COPY res/httpd.conf /etc/apache2/httpd.conf
RUN a2enmod proxy proxy_http ssl
RUN a2ensite proxy_1.conf
RUN a2dissite 000-default.conf
#COPY res/proxy_2.conf /etc/apache2/conf.d/proxy_2.conf


#COPY ui.zip ui.zip
#COPY $ETF_RELATIVE_URL.war /usr/local/jetty/webapps/
RUN mkdir -p $ETF_DIR $ETF_LOG_DIR /run/tini && \
    touch /run/tini/tini-ready
RUN mkdir /tmp/jetty
WORKDIR /usr/local/jetty

# Run entrypoint for the inspire validator
ENTRYPOINT ["/docker-entrypoint.sh"]

# Expose the port of job scheduler.
EXPOSE 8000

CMD ["supervisord", "-c", "/etc/supervisord.conf"]
