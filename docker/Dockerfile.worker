# --- First Stage: Build Jetty for INSPIRE validator ---
FROM ubuntu:focal AS jetty-builder
RUN JETTY_VERSION=9.4.56.v20240826 && JETTY_HOME=/usr/local/jetty \
    && mkdir -p ${JETTY_HOME} \
    && apt-get update && apt-get install -y --no-install-recommends wget unzip \
    && wget --no-check-certificate https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/${JETTY_VERSION}/jetty-distribution-${JETTY_VERSION}.tar.gz -O /tmp/jetty.tar.gz \
    && tar -xzf /tmp/jetty.tar.gz -C ${JETTY_HOME} --strip-components=1 \
    && rm /tmp/jetty.tar.gz

# --- Second Stage: Build the remainder of the image ---    
FROM ubuntu:focal

LABEL author=gisat.cz
LABEL description="QC tool environment, worker service."

ARG VERSION

ENV PYTHONPATH=/usr/local/src/copernicus_quality_tools/src
ENV VERSION=${VERSION:-${DOCKER_TAG:-master}}

# Set environment variables for INSPIRE validator
ENV DEBIAN_FRONTEND=noninteractive
ENV ETF_DIR=/etf
ENV ETF_LOG_DIR=/etf/logs

ENV ETF_DL_TESTPROJECTS_DIR_NAME=inspire-ets-repository
ENV ETF_DL_TESTPROJECTS_OVERWRITE_EXISTING=true
ENV MAX_MEM=max
ENV HTTP_PROXY_HOST=localhost
ENV HTTP_PROXY_PORT=3128
ENV HTTP_PROXY_USERNAME=none
ENV HTTP_PROXY_PASSWORD=none
ENV HTTPS_PROXY_HOST=none
ENV HTTPS_PROXY_PORT=3129
ENV HTTPS_PROXY_USERNAME=none
ENV HTTPS_PROXY_PASSWORD=none
# Set the Jetty version for INSPIRE validator.
ENV JETTY_VERSION=9.4.56.v20240826
ENV JETTY_HOME=/usr/local/jetty

COPY --from=jetty-builder /usr/local/jetty /usr/local/jetty

# Build the initial environment with python packages.
RUN echo "$VERSION" >/etc/qc_tool_version.txt \
    && apt-get -y update \
    && apt-get install -y --no-install-recommends \
    wget curl jq unzip time gnupg2 gdal-bin \
    python3 python3-pip python3-gdal python3-psycopg2 \
    openjdk-11-jre tini squid openssl apache2 \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install python packages.
RUN pip3 install --no-cache-dir \
    numpy boto3 checksumdir scikit-image requests bottle supervisor reportlab==3.6.13

# Install jetty for the INSPIRE validator.
#RUN mkdir -p "$JETTY_HOME"

# Download and unpack Jetty
RUN JETTY_VERSION=9.4.56.v20240826 JETTY_HOME=/usr/local/jetty wget https://repo1.maven.org/maven2/org/eclipse/jetty/jetty-distribution/${JETTY_VERSION}/jetty-distribution-${JETTY_VERSION}.tar.gz -O /tmp/jetty.tar.gz && \
tar -xzf /tmp/jetty.tar.gz -C ${JETTY_HOME} --strip-components=1 && \
rm /tmp/jetty.tar.gz

# Copy supervisor config file.
COPY ./supervisord.conf /etc

# Expose the port of supervisor.
EXPOSE 9001

# Install postgresql version 14 & postgis version 3.
#
# Create the file postgresql apt repository configuration.
RUN sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt focal-pgdg main" > /etc/apt/sources.list.d/pgdg.list'

# Import the repository signing key:
RUN wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add -

# Update the package lists to include PostgreSQL.
RUN apt-get update

# During install tzdata package needs timezone having been set already.
ENV TZ=UTC
RUN apt-get -y install postgresql-14-postgis-3

# Configure the qc tool database.
#
# We insert qc_job/trust clause just *before* 127.0.0.1/md5 clause in pg_hba.conf,
# so that qc_job is thus allowed to connect to qc_tool_db without password even
# when connecting to 127.0.0.1.
USER postgres
COPY ./init_qc_tool_db.sql /usr/local/src
RUN sed --in-place=.orig --expression='/^# IPv4 local connections/a host  qc_tool_db  qc_job  all  trust' /etc/postgresql/14/main/pg_hba.conf \
    && echo "listen_addresses='*'" >>/etc/postgresql/14/main/postgresql.conf \
    && /etc/init.d/postgresql start \
    && psql --file=/usr/local/src/init_qc_tool_db.sql \
    && /etc/init.d/postgresql stop
USER root
RUN rm -rf /var/lib/apt/lists/* /usr/local/src/init_qc_tool_db.sql

# Install qc tool.
RUN cd /usr/local/src \
    && wget --no-verbose https://github.com/eea/copernicus_quality_tools/archive/${VERSION}.zip \
    && unzip -q ./${VERSION}.zip \
    && rm ./${VERSION}.zip \
    && mv ./copernicus_quality_tools-${VERSION} ./copernicus_quality_tools \
    && echo ${VERSION} >./copernicus_quality_tools/VERSION

# Download and extract the INSPIRE Validator WAR file and the ui.zip file
RUN INSPIRE_VALIDATOR_VERSION=$(curl -s https://api.github.com/repos/INSPIRE-MIF/helpdesk-validator/releases/latest | jq -r .tag_name | sed 's/^v//') \
    && ETF_DL_TESTPROJECTS_ZIP=https://github.com/inspire-eu-validation/ets-repository/archive/v${INSPIRE_VALIDATOR_VERSION}.zip \
    && wget --no-verbose -O /tmp/inspire-validator.zip \
    https://github.com/INSPIRE-MIF/helpdesk-validator/releases/download/v${INSPIRE_VALIDATOR_VERSION}/inspire-validator-${INSPIRE_VALIDATOR_VERSION}.zip \
    && unzip -q /tmp/inspire-validator.zip -d /tmp \
    && mv /tmp/validator.war /usr/local/jetty/webapps/validator.war \
    && mv /tmp/ui.zip ui.zip \
    && wget -q ${ETF_DL_TESTPROJECTS_ZIP} -O projects.zip \
    && mkdir -p ${ETF_DIR}/projects/${ETF_DL_TESTPROJECTS_DIR_NAME} \
    && unzip -o projects.zip -d ${ETF_DIR}/projects/${ETF_DL_TESTPROJECTS_DIR_NAME} \
    && rm -rf projects.zip /tmp/inspire-validator.zip /tmp/validator.war /tmp/ui.zip \
    && echo ${INSPIRE_VALIDATOR_VERSION} >/etc/inspire-validator-version.txt

# Download the INSPIRE registry resources
RUN INSPIRE_VALIDATOR_VERSION=$(curl -s https://api.github.com/repos/INSPIRE-MIF/helpdesk-validator/releases/latest | jq -r .tag_name | sed 's/^v//') \
    && mkdir -p /tmp/inspire-registry-resources \
    && wget --no-verbose -O /tmp/inspire-registry-resources.zip \
    https://github.com/INSPIRE-MIF/helpdesk-validator/releases/download/v${INSPIRE_VALIDATOR_VERSION}/inspire-registry-resources.zip \
    && unzip -q /tmp/inspire-registry-resources.zip -d /tmp/inspire-registry-resources \
    && mkdir -p ${ETF_DIR}/inspire-registry-resources \
    && mv /tmp/inspire-registry-resources ${ETF_DIR}/inspire-registry-resources/

# Copy INSPIRE validator resources and prepare directories
COPY inspire/docker-entrypoint.sh /

# Copy the Squid configuration, ensure correct permissions and create required directories.
COPY inspire/squid_ubuntu.conf /etc/squid/squid.conf
RUN chmod 644 /etc/squid/squid.conf
RUN mkdir -p /var/log/supervisor /var/spool/squid /var/log/squid /var/run/squid \
    && cd /var/spool/squid \
    && chown -R proxy:proxy /var/spool/squid /var/log/squid /var/run/squid \
    && chmod -R 755 /var/run/squid /var/log/squid /var/spool/squid \
    && touch /var/log/squid/access.log /var/log/squid/cache.log \
    && chown proxy:proxy /var/log/squid/*.log

# Initialize Squid cache
RUN squid -N -z && chown -R proxy:proxy /var/spool/squid

# Copy the Apache configuration and enable correct Apache modules
COPY inspire/apache_proxy.conf /etc/apache2/sites-available/proxy_1.conf
COPY inspire/httpd.conf /etc/apache2/httpd.conf
RUN a2enmod proxy proxy_http ssl
RUN a2ensite proxy_1.conf
RUN a2dissite 000-default.conf

# Set up directories for jetty (inspire-validator app)
RUN mkdir -p $ETF_DIR $ETF_LOG_DIR /run/tini && \
    touch /run/tini/tini-ready
RUN mkdir /tmp/jetty
WORKDIR /usr/local/jetty

#REMEMBER the installed INSPIRE validator version and save it to a test file
RUN echo "$INSPIRE_VALIDATOR_VERSION" >/etc/inspire_validator_version.txt

# Run entrypoint for the inspire validator
ENTRYPOINT ["/docker-entrypoint.sh"]

# Expose the port of job scheduler.
EXPOSE 8000

CMD ["supervisord", "-c", "/etc/supervisord.conf"]
