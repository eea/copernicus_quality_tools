version: '3.7'

services:
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend.debug
      args:
        - VERSION
    image: eeacms/copernicus-qctool-frontend:latest
    ports:
      - 8000:8000
      - 5678:5678
    environment:
      - PRODUCT_DIRS
      - BOUNDARY_DIR=/mnt/qc_tool_volume/boundaries
      - INCOMING_DIR=/mnt/qc_tool_volume/incoming
      - WORK_DIR=/mnt/qc_tool_volume/work
      - SUBMISSION_DIR=
      - FRONTEND_DB_PATH=/mnt/qc_tool_volume/frontend.sqlite3
    networks:
      - qc_tool_network
    volumes:
      -  ..:/usr/local/src/copernicus_quality_tools
      - qc_tool_volume:/mnt/qc_tool_volume
    command: ["sh", 
              "-c", 
              "rm -r /mnt/qc_tool_volume/frontend.sqlite3 && cd /usr/local/src/copernicus_quality_tools/src/qc_tool/frontend && python3 ./manage.py migrate && python3 ./manage.py create_default_user --username guest --password guest && python3 ./manage.py runserver 0.0.0.0:8000"]

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
      args:
        - VERSION
    image: eeacms/copernicus-qctool-worker:latest
    shm_size: 1gb
    environment:
      - PRODUCT_DIRS
      - BOUNDARY_DIR=/mnt/qc_tool_volume/boundaries
      - INCOMING_DIR=/mnt/qc_tool_volume/incoming
      - PULL_JOB_URL=http://frontend:8000/pull_job
      - WORK_DIR=/mnt/qc_tool_volume/work
    networks:
      - qc_tool_network
    volumes:
      - qc_tool_volume:/mnt/qc_tool_volume
      - ..:/usr/local/src/copernicus_quality_tools

  test:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        - VERSION
    image: eeacms/copernicus-qctool-test:latest
    environment:
      - PRODUCT_DIRS
      - BOUNDARY_DIR=/mnt/qc_tool_volume/boundaries
      - INCOMING_DIR=/mnt/qc_tool_volume/incoming
      - WORK_DIR=/mnt/qc_tool_volume/work
      - SKIP_INSPIRE_CHECK=yes
      - PG_HOST=worker
    networks:
      - qc_tool_network
    volumes:
      - qc_tool_volume:/mnt/qc_tool_volume
      - ..:/usr/local/src/copernicus_quality_tools
    command: ["sh", 
              "-c", 
              "cd /usr/local/src/copernicus_quality_tools/src/qc_tool && sleep 5 && python3 -m unittest discover qc_tool.test"]
volumes:
  qc_tool_volume:
    driver: local

networks:
  qc_tool_network:
    driver: bridge
